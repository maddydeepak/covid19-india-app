{"version":3,"sources":["Footer/Footer.js","AarogyaSetu/AarogyaSetu.js","Graph/Graph.js","Map/Map.js","Home/Home.js","Page404/Page404.js","Emergency/Emergency.js","FAQ/FAQ.js","App.js","serviceWorker.js","index.js","assets/images/setu_logo.jpg","assets/images/setu_1.jpg","assets/images/setu_2.jpg","assets/images/setu_3.jpg"],"names":["Footer","href","rel","target","Component","AarogyaSetu","className","src","require","alt","align","style","maxWidth","exact","to","fontSize","marginTop","React","Graph","getConfirmedData","a","confirmedArr","i","props","data","length","x","y","parseInt","dailyconfirmed","push","getRecoveredData","b","recoveredArr","dailyrecovered","getDeathsData","c","deathsArr","dailydeceased","confirmed","this","recovered","deaths","height","width","color","Map","state","active","deltaConfirmed","deltaRecovered","deltaDeaths","locationMouseOver","e","statecode","currentTarget","id","toUpperCase","setState","deltaconfirmed","deltarecovered","deltadeaths","conf","stateCd","undefined","toLowerCase","document","getElementById","fill","locationClassName","map","India","onLocationMouseOver","Home","useState","dataReceived","setDataReceived","total","setTotal","stateData","setStateData","stateDistData","setStateDistData","stateDistArr","setStateDistArr","graphData","setGraphData","useEffect","Promise","all","axios","get","response","stateDistResponse","statewise","slice","sort","cases_time_series","Object","entries","getStates","getDeltaConfirmed","getDeltaRecovered","getDeltaDeaths","onClickHandler","hiddenEl","nextElementSibling","firstChild","firstElementChild","classList","plusMinusIcon","value","indexOf","remove","add","replace","coronaFreeStates","substr","getCoronaFree","lastupdatedtime","count","getAffectedStateCount","scope","Fragment","key","onClick","colSpan","g","districtData","l","delta","window","scroll","top","left","behavior","Page404","Emergency","emergencyContacts","setEmergencyContacts","regEmergencyContacts","setRegEmergencyContacts","then","contacts","primary","regional","number","email","loc","FAQ","App","$","click","backgroundColor","type","data-toggle","data-target","activeClassName","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.433f5f86.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                This is NOT an official website and data is taken from different API sources. <br />\r\n                Designed by: <a href=\"https://www.linkedin.com/in/deepak-maddheshiya/\" rel=\"noopener noreferrer\" target=\"_blank\">Deepak Maddheshiya</a>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './AarogyaSetu.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Footer from '../Footer/Footer';\r\n\r\nclass AarogyaSetu extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid\">\r\n                    <h1 className=\"setu-heading\">Aarogya Setu App</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 setu-icon\">\r\n                            <img src={require(\"../assets/images/setu_logo.jpg\")} alt=\"Setu Logo\"></img>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <p className=\"setu-note\">Aarogya Setu is a COVID-19 tracking mobile application developed by the National Informatics Centre\r\n                            that comes under the Ministry of Electronics and Information Technology, Government of India.\r\n                        </p>\r\n                            <div align=\"center\">\r\n                                <a href=\"https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en_IN\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <button className=\"btn btn-primary app-link\">Download Android App</button>\r\n                                </a>\r\n                                <a href=\"https://apps.apple.com/in/app/aarogyasetu/id1505825357\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <button className=\"btn btn-primary app-link\">Download iOS App</button>\r\n                                </a>\r\n                            </div>\r\n                            <p className=\"setu-note\">I extremely recommend you to download this app. This way not only you\r\n                            will save your life but also your family.\r\n                        </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{ maxWidth: \"100%\" }}>\r\n                        <div className=\"col-sm-4 setu-row\">\r\n                            <img className=\"setu-img\" src={require(\"../assets/images/setu_1.jpg\")} alt=\"Setu App Screen 1\"></img>\r\n                        </div>\r\n                        <div className=\"col-sm-4 setu-row\">\r\n                            <img className=\"setu-img\" src={require(\"../assets/images/setu_2.jpg\")} alt=\"Setu App Screen 2\"></img>\r\n                        </div>\r\n                        <div className=\"col-sm-4 setu-row\">\r\n                            <img className=\"setu-img\" src={require(\"../assets/images/setu_3.jpg\")} alt=\"Setu App Screen 3\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <div align=\"center\">\r\n                        <NavLink exact to=\"/\">\r\n                            <button style={{ fontSize: \"15px\", marginTop: \"10px\" }} className=\"btn btn-primary\">Home</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AarogyaSetu;","import React, { Component } from 'react';\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport { XYPlot, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\r\nimport './Graph.css';\r\n\r\nclass Graph extends Component {\r\n\r\n    getConfirmedData = () => {\r\n        let a = {};\r\n        let confirmedArr = [];\r\n        for (let i = 30; i < this.props.data.length; i++) {\r\n            a = {};\r\n            a.x = i;\r\n            a.y = parseInt(this.props.data[i].dailyconfirmed);\r\n            confirmedArr.push(a);\r\n        }\r\n        return confirmedArr;\r\n    }\r\n\r\n    getRecoveredData = () => {\r\n        let b = {};\r\n        let recoveredArr = [];\r\n        for (let i = 30; i < this.props.data.length; i++) {\r\n            b = {};\r\n            b.x = i;\r\n            b.y = parseInt(this.props.data[i].dailyrecovered);\r\n            recoveredArr.push(b);\r\n        }\r\n        return recoveredArr;\r\n    }\r\n\r\n    getDeathsData = () => {\r\n        let c = {};\r\n        let deathsArr = [];\r\n        for (let i = 30; i < this.props.data.length; i++) {\r\n            c = {};\r\n            c.x = i;\r\n            c.y = parseInt(this.props.data[i].dailydeceased);\r\n            deathsArr.push(c);\r\n        }\r\n        return deathsArr;\r\n    }\r\n\r\n    render() {\r\n        const confirmed = this.getConfirmedData();\r\n        const recovered = this.getRecoveredData();\r\n        const deaths = this.getDeathsData();\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h4 className=\"confirmed\"><strong>Confirmed:</strong></h4>\r\n                    <div className=\"Graph\">\r\n                        <XYPlot height={200} width={300}>\r\n                            <YAxis />\r\n                            <HorizontalGridLines />\r\n                            <LineSeries data={confirmed} color=\"red\" />\r\n                        </XYPlot>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h4 className=\"recovered\"><strong>Recovered:</strong></h4>\r\n                    <div className=\"Graph\">\r\n                        <XYPlot height={200} width={300}>\r\n                            <YAxis />\r\n                            <HorizontalGridLines />\r\n                            <LineSeries data={recovered} color=\"green\" />\r\n                        </XYPlot>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h4 className=\"deaths\"><strong>Deaths:</strong></h4>\r\n                    <div className=\"Graph\">\r\n                        <XYPlot height={200} width={300}>\r\n                            <YAxis />\r\n                            <HorizontalGridLines />\r\n                            <LineSeries data={deaths} color=\"#a0a3a7\" />\r\n                        </XYPlot>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import React from \"react\";\r\nimport India from \"@svg-maps/india\";\r\nimport { SVGMap } from \"react-svg-map\";\r\nimport \"../../node_modules/react-svg-map/src/svg-map.scss\";\r\nimport \"./Map.css\";\r\n\r\nclass Map extends React.Component {\r\n\r\n    state = {\r\n        state: \"Click on the Map\",\r\n        confirmed: 0,\r\n        recovered: 0,\r\n        deaths: 0,\r\n        active: 0,\r\n        deltaConfirmed: 0,\r\n        deltaRecovered: 0,\r\n        deltaDeaths: 0\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let conf = 0;\r\n        let stateCd = \"\";\r\n        if (this.props.data != undefined) {\r\n            for (let i = 0; i < this.props.data.length; i++) {\r\n                conf = parseInt(this.props.data[i].confirmed);\r\n                stateCd = this.props.data[i].statecode.toLowerCase();;\r\n                if (document.getElementById(stateCd)) {\r\n                    if (conf <= 100) {\r\n                        document.getElementById(stateCd).style.fill = \"#ffa3a3\";\r\n                    } else if (conf > 100 && conf <= 1000) {\r\n                        document.getElementById(stateCd).style.fill = \"#ff5555\";\r\n                    } else if (conf > 1000 && conf <= 5000) {\r\n                        document.getElementById(stateCd).style.fill = \"#ff2e2e\";\r\n                    } else {\r\n                        document.getElementById(stateCd).style.fill = \"red\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    locationMouseOver = (e) => {\r\n        for (let i = 0; i < this.props.data.length; i++) {\r\n            if (this.props.data[i].statecode === e.currentTarget.id.toUpperCase()) {\r\n                this.setState({\r\n                    state: this.props.data[i].state,\r\n                    confirmed: this.props.data[i].confirmed,\r\n                    recovered: this.props.data[i].recovered,\r\n                    deaths: this.props.data[i].deaths,\r\n                    active: this.props.data[i].active,\r\n                    deltaConfirmed: this.props.data[i].deltaconfirmed,\r\n                    deltaRecovered: this.props.data[i].deltarecovered,\r\n                    deltaDeaths: this.props.data[i].deltadeaths\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"map-style\">\r\n                <div id=\"stateData\" className=\"state-data\">\r\n                    <h4 className=\"state-data-heading\">{this.state.state}</h4>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-6 confirmed-data\">\r\n                            <p className=\"cases\">CONFIRMED</p>\r\n                            <p>{this.state.confirmed} [+{this.state.deltaConfirmed}]</p>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-6 active-data\">\r\n                            <p className=\"cases\">ACTIVE</p>\r\n                            <p>{this.state.active}</p>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-6 recovered-data\">\r\n                            <p className=\"cases\">RECOVERED</p>\r\n                            <p>{this.state.recovered} [+{this.state.deltaRecovered}]</p>\r\n                        </div>\r\n                        <div className=\"col-sm-6 col-6 deaths-data\">\r\n                            <p className=\"cases\">DEATHS</p>\r\n                            <p>{this.state.deaths} [+{this.state.deltaDeaths}]</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SVGMap\r\n                    className=\"svg-map\"\r\n                    locationClassName=\"svg-map__location\"\r\n                    map={India}\r\n                    onLocationMouseOver={this.locationMouseOver}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map;","import React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\nimport axios from 'axios';\r\nimport Graph from '../Graph/Graph';\r\nimport Map from '../Map/Map';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Home = (props) => {\r\n    const [dataReceived, setDataReceived] = useState(false);\r\n    const [total, setTotal] = useState({});\r\n    const [stateData, setStateData] = useState([]);\r\n    const [stateDistData, setStateDistData] = useState([]);\r\n    const [stateDistArr, setStateDistArr] = useState([]);\r\n    const [graphData, setGraphData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getStates = async () => {\r\n            const [response, stateDistResponse] = await Promise.all([\r\n                axios.get('https://api.covid19india.org/data.json'),\r\n                axios.get('https://api.covid19india.org/state_district_wise.json')]);\r\n            setTotal(response.data.statewise[0]);\r\n            setStateData(response.data.statewise.slice(1).sort((a, b) => {\r\n                return (b.confirmed - a.confirmed);\r\n            }));\r\n            setGraphData(response.data.cases_time_series);\r\n            setStateDistData(stateDistResponse.data);\r\n            setDataReceived(true);\r\n            setStateDistArr(Object.entries(stateDistData));\r\n        }\r\n        if (!dataReceived) {\r\n            getStates();\r\n        }\r\n    });\r\n\r\n    const calculateActiveCases = (confirmed, recovered, deaths) => {\r\n        return (confirmed - recovered - deaths);\r\n    }\r\n\r\n    const getDeltaConfirmed = (deltaconfirmed) => {\r\n        if (deltaconfirmed != 0) {\r\n            return <span className=\"glyphicon glyphicon-arrow-up delta-confirmed\">{deltaconfirmed}</span>;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const getDistDeltaConfirmed = (deltaconfirmed) => {\r\n        if (deltaconfirmed != 0) {\r\n            return <span className=\"glyphicon glyphicon-arrow-up delta-confirmed\">{deltaconfirmed}</span>;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const getDeltaRecovered = (deltaRecovered) => {\r\n        if (deltaRecovered != 0) {\r\n            return <span className=\"glyphicon glyphicon-arrow-up delta-recovered\">{deltaRecovered}</span>;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const getDeltaDeaths = (deltaDeaths) => {\r\n        if (deltaDeaths != 0) {\r\n            return <span className=\"glyphicon glyphicon-arrow-up delta-deaths\">{deltaDeaths}</span>;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    const getAffectedStateCount = () => {\r\n        let count = 0;\r\n        stateData.map((state) => {\r\n            if (state.confirmed != 0) {\r\n                count += 1;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        window.scroll({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    const onClickHandler = (e) => {\r\n        const hiddenEl = e.currentTarget.nextElementSibling.firstChild.firstElementChild.classList;\r\n        const plusMinusIcon = e.currentTarget.firstElementChild.firstChild.classList;\r\n        (hiddenEl.value.indexOf(\"collapse\") !== -1) ? hiddenEl.remove(\"collapse\") : hiddenEl.add(\"collapse\");\r\n        (plusMinusIcon.value.indexOf(\"chevron-right\") != -1) ? plusMinusIcon.replace(\"glyphicon-chevron-right\", \"glyphicon-chevron-down\") : plusMinusIcon.replace(\"glyphicon-chevron-down\", \"glyphicon-chevron-right\");\r\n    }\r\n\r\n    const getCoronaFree = () => {\r\n        let coronaFreeStates = \"\";\r\n        stateData.map((a) => {\r\n            if (a.confirmed !== \"0\" && a.active === \"0\") {\r\n                coronaFreeStates += \", \" + a.state;\r\n            }\r\n        });\r\n        return coronaFreeStates.substr(2);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"corona-free\">\r\n                    Corona Free States: {getCoronaFree()}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 heading\"><h2><strong>Covid 19 - Cases in India</strong></h2></div>\r\n                    <div className=\"col-sm-12 last-updated\">Last Updated: {total.lastupdatedtime} IST</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-3 col-6 heading-data confirmed\">\r\n                        <h4><strong>Confirmed</strong></h4>\r\n                        <div className=\"count-box count-box-confirmed\">\r\n                            <p className=\"count\">{total.confirmed}</p>\r\n                            <p className=\"increment\">[+{total.deltaconfirmed}]</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 col-6 heading-data active\">\r\n                        <h4><strong>Active Cases</strong></h4>\r\n                        <div className=\"count-box count-box-active\">\r\n                            <p className=\"count\">{calculateActiveCases(total.confirmed, total.recovered, total.deaths)}</p>\r\n                            <p className=\"increment\">-</p>    \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 col-6 heading-data recovered\">\r\n                        <h4><strong>Recovered</strong></h4>\r\n                        <div className=\"count-box count-box-recovered\">\r\n                            <p className=\"count\">{total.recovered}</p>\r\n                            <p className=\"increment\">[+{total.deltarecovered}]</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3 col-6 heading-data deaths\">\r\n                        <h4><strong>Deaths</strong></h4>\r\n                        <div className=\"count-box count-box-deaths\">\r\n                            <p className=\"count\">{total.deaths}</p>\r\n                            <p className=\"increment\">[+{total.deltadeaths}]</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <Map data={stateData} />\r\n                            </div>\r\n                            <div className=\"col-sm-12\">\r\n                                <Graph data={graphData} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <h4 className=\"affected-states\">No. of States/UT affected: {getAffectedStateCount()}</h4>\r\n                        <div id=\"no-more-tables\">\r\n                            <table className=\"table table-parent\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">State/UT</th>\r\n                                        <th scope=\"col\">Confirmed</th>\r\n                                        <th scope=\"col\">Active</th>\r\n                                        <th scope=\"col\">Recovered</th>\r\n                                        <th scope=\"col\">Deaths</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {stateData.map((state) => {\r\n                                        return (\r\n                                            <React.Fragment>\r\n                                                <tr key={state.state} onClick={onClickHandler}>\r\n                                                    <td><span className=\"glyphicon glyphicon-chevron-right plus-minus\"></span> {state.state}</td>\r\n                                                    <td>{getDeltaConfirmed(state.deltaconfirmed)} {state.confirmed}</td>\r\n                                                    <td>{state.active}</td>\r\n                                                    <td>{getDeltaRecovered(state.deltarecovered)} {state.recovered}</td>\r\n                                                    <td>{getDeltaDeaths(state.deltadeaths)} {state.deaths}</td>\r\n                                                </tr>\r\n                                                <tr key={state.statecode}>\r\n                                                    <td colSpan=\"5\" className=\"hiddenRow\">\r\n                                                        <div className=\"collapse\">\r\n                                                            <h5 className=\"dist-heading\">Last Updated: {state.lastupdatedtime} IST</h5>\r\n                                                            <table className=\"table-child\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>District</th>\r\n                                                                        <th>Confirmed</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {\r\n                                                                        stateDistArr.map((g) => {\r\n                                                                            if (g[0] === state.state) {\r\n                                                                                return (\r\n                                                                                    Object.entries(g[1].districtData).map((l) => {\r\n                                                                                        return (\r\n                                                                                            <tr key={l[0]}>\r\n                                                                                                <td>{l[0]}</td>\r\n                                                                                                <td>{getDistDeltaConfirmed(l[1].delta.confirmed)} {l[1].confirmed}</td>\r\n                                                                                            </tr>\r\n                                                                                        )\r\n                                                                                    })\r\n                                                                                )\r\n                                                                            }\r\n                                                                        })\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </React.Fragment>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <th scope=\"col\">Total</th>\r\n                                        <th scope=\"col\">{getDeltaConfirmed(total.deltaconfirmed)} {total.confirmed}</th>\r\n                                        <th scope=\"col\">{total.active}</th>\r\n                                        <th scope=\"col\">{getDeltaRecovered(total.deltarecovered)} {total.recovered}</th>\r\n                                        <th scope=\"col\">{getDeltaDeaths(total.deltadeaths)} {total.deaths}</th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div align=\"center\">\r\n                <button className=\"btn btn-primary go-to-top\" onClick={scrollToTop}>Go to Top</button>\r\n            </div>\r\n            <Footer />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div align=\"center\">\r\n            <h1>Oops! Requested page not found.</h1>\r\n            <h2>Abort mission and return home. Over!</h2>\r\n            <div>\r\n                <NavLink exact to=\"/\">\r\n                    <button style={{fontSize: \"20px\"}} className=\"btn btn-primary\">Home</button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Footer from '../Footer/Footer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Emergency.css';\r\n\r\nconst Emergency = () => {\r\n\r\n    const [emergencyContacts, setEmergencyContacts] = useState({});\r\n    const [regEmergencyContacts, setRegEmergencyContacts] = useState([]);\r\n    const [dataReceived, setDataReceived] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!dataReceived) {\r\n            axios.get(\"https://api.rootnet.in/covid19-in/contacts\").then(\r\n                response => {\r\n                    setEmergencyContacts(response.data.data.contacts.primary);\r\n                    setRegEmergencyContacts(response.data.data.contacts.regional);\r\n                    setDataReceived(true);\r\n                }\r\n            )\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <h1 className=\"contact-heading\">Emergency Contacts</h1>\r\n                <h2>Ministry of Health and Family Welfare, Government of India <strong>(MoHFW)</strong></h2>\r\n                <div className=\"emer-contact\">\r\n                    <p>Toll Free Number: <a href={\"tel:\" + emergencyContacts['number-tollfree']}>{emergencyContacts[\"number-tollfree\"]}</a></p>\r\n                    <p>Phone Number: <a href={\"tel:\" + emergencyContacts.number}>{emergencyContacts.number}</a></p>\r\n                    <p>Email ID: <a href={\"mailto:\" + emergencyContacts.email}>{emergencyContacts.email}</a></p>\r\n                    <p>Follow MoHFW Social Media Pages: </p>\r\n                    <a href=\"https://www.facebook.com/MoHFWIndia\" rel=\"noopener noreferrer\" target=\"_blank\"><button className=\"btn btn-primary social-media-button\">Facebook</button></a>\r\n                    <a href=\"https://twitter.com/MoHFW_INDIA\" rel=\"noopener noreferrer\" target=\"_blank\"><button className=\"btn btn-primary social-media-button\">Twitter</button></a>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped cont-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>State/UT</td>\r\n                                <td>Contact</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                regEmergencyContacts.map((data) => {\r\n                                    return (\r\n                                        <tr key={data.loc}>\r\n                                            <td>{data.loc}</td>\r\n                                            <td><a href={\"tel:\" + data.number}>{data.number}</a></td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div align=\"center\">\r\n                    <NavLink exact to=\"/\">\r\n                        <button style={{ fontSize: \"15px\", marginTop: \"10px\" }} className=\"btn btn-primary\">Home</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emergency;","import React from 'react';\r\nimport './FAQ.css';\r\nimport Footer from '../Footer/Footer';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst FAQ = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n                <h1 className=\"faq-heading\">FAQ</h1>\r\n                <div>\r\n                    <div className=\"faq-question\">Is this an official website?</div>\r\n                    <div className=\"faq-answer\">No, this is not an official website. This is my personal project and I've deployed\r\n                    this application on GitHub just to spread awareness about the CoronaVirus cases in India.</div>\r\n                    <div className=\"faq-question\">Who are you?</div>\r\n                    <div className=\"faq-answer\">I'm a software engineer working in Bangalore.</div>\r\n                    <div className=\"faq-question\">What technologies have you used for this project?</div>\r\n                    <div className=\"faq-answer\">I've used React JS, BootStrap, HTML, CSS, JavaScript and JQuery.\r\n                    I've used SVG Map and React graphs to display data.</div>\r\n                    <div className=\"faq-question\">Which sources have you used to collect data for this project?</div>\r\n                    <div className=\"faq-answer\">I've taken data from different APIs provided by COVID19INDIA\r\n                    (https://api.covid19india.org/) and Rootnet (https://api.rootnet.in/covid19-in/contacts).</div>\r\n                    <div className=\"faq-question\">Why is the data shown on this site slightly different from other sources?</div>\r\n                    <div className=\"faq-answer\">Yes, the data shown here is slightly differnt than the other sources\r\n                    and that's because the APIs used are updated based on the latest local/national news. There are no data changes \r\n                    done from my side.</div>\r\n                    <div className=\"faq-question\">How can I contact you?</div>\r\n                    <div className=\"faq-answer\">You can contact me by sending me a DM on LinkedIn.\r\n                    (https://www.linkedin.com/in/deepak-maddheshiya/)</div>\r\n                </div>\r\n                <div align=\"center\">\r\n                    <NavLink exact to=\"/\">\r\n                        <button style={{ fontSize: \"15px\", marginTop: \"10px\" }} className=\"btn btn-primary\">Home</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQ;","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, NavLink, Switch, BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport AarogyaSetu from './AarogyaSetu/AarogyaSetu';\nimport Home from './Home/Home';\nimport Page404 from './Page404/Page404';\nimport Emergency from './Emergency/Emergency';\nimport FAQ from './FAQ/FAQ';\nimport $ from 'jquery';\n\nconst App = () => {\n\n  useEffect(() => {\n    $('.navbar-collapse a').click(() => {\n      $(\".navbar-collapse\")[0].classList.replace(\"show\", \"hide\");\n    });\n  });\n\n  return (\n    <HashRouter>\n      <nav className=\"navbar navbar-expand-md navbar-light\" style={{ backgroundColor: \"#17a2b8\" }}>\n        <button className=\"navbar-toggler menu-button\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n          <span className=\"glyphicon glyphicon-th-large menu\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink exact to=\"/\" activeClassName=\"active\"><span className=\"glyphicon glyphicon-home home-icon\"></span> Home</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/aarogyaSetu\"><span className=\"glyphicon glyphicon-heart setu\"></span> Aarogya Setu</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/emergency\"><span className=\"glyphicon glyphicon-plus plus\"></span> Helpline</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/faq\"><span className=\"glyphicon glyphicon-question-sign faq\"></span> FAQ</NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"message\">\n        Stay Home & Stay Safe. Follow Social Distancing. #IndiaFightsCorona\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/aarogyaSetu\" component={AarogyaSetu}></Route>\n        <Route path=\"/emergency\" component={Emergency}></Route>\n        <Route path=\"/faq\" component={FAQ}></Route>\n        <Route component={Page404} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/setu_logo.a8f80ca1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/setu_1.188031a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/setu_2.0b18dee2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/setu_3.99764678.jpg\";"],"sourceRoot":""}